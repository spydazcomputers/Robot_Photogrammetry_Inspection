MODULE MainModule
	PERS robtarget p20:=[[152.478,185.808,207.487 ],[0.367323,0.741513,-0.346174,0.442036],[-1,0,-1,11],[152.879,9E+09,9E+09,9E+09,9E+09,9E+09]];
	VAR robtarget p30;
	VAR robtarget lastgoodPos;
    VAR robtarget currpos;
    PERS robtarget clearpos;
    VAR jointtarget jointpos1;
    VAR errnum myerrnum;
    VAR num moveCMPT := 1;
    PROC main()
         
	ConfL \Off;
	p30 := p20;
    MoveL p20, v5000, z50, tool0;
    
		WHILE TRUE DO
            restart:
            jointpos1 := CalcJointT(p30, tool0 \WObj:=wobj0 ); !see if we can reach the new point;
              
                IF NOT (p30 = lastgoodPos) THEN 
                    moveCMPT := 1; !Set the move complete bit to 1 this will block the loop in the application until the move is complete;
                    MoveL p30, v5000, z50, tool0; !Move to the new point;   
                    currpos := CRobT(\Tool:=tool0 \WObj:=wobj0); !Update the robots new postion
                    lastgoodPos := currpos; !Update the error return target to the last completed move
                    moveCMPT :=0; !Clear the moveCMPT bit to allow application to continue
                ENDIF
                
        ENDWHILE
        
        !Begin Error Handler
        ERROR
            TEST ERRNO
                CASE ERR_COLL_STOP:
                    moveCMPT := 1;
                    MoveL clearpos, v1000, z50, tool0;
                    moveCMPT := 0;
                CASE ERR_OUTSIDE_REACH:
                    p30 := lastgoodPos;
                    moveCMPT := 0;
                    
            ENDTEST
            StartMove;
            RETRY;
        !End Error Handler
            
    ENDPROC
ENDMODULE