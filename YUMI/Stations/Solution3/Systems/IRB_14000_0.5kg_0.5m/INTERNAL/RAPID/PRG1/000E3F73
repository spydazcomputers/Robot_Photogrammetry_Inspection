MODULE MainModule
	VAR robtarget p20R:=[[412.53,-188.21,195.45],[0.0196523,0.791414,0.18309,0.582886],[0,1,-1,11],[150.954,9E9,9E9,9E9,9E9,9E9]];
	VAR robtarget p30R;
	VAR robtarget lastgoodPosR;
    VAR robtarget currposR;
    PERS robtarget clearposR:=[[412.53,-188.21,195.45],[0.0196523,0.791414,0.18309,0.582886],[0,1,-1,11],[150.954,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR jointtarget jointpos1R;
    VAR errnum myerrnumR;
    VAR num moveCMPTR := 1;
    PROC main()
         
	ConfL \Off;
	p30R := p20R;
    MoveL p20R, v5000, z50, tool0;
    moveCMPTR := 0;
		WHILE TRUE DO
            restart:
            jointpos1R := CalcJointT(p30R, tool0); !see if we can reach the new point;
              
                IF NOT (p30R = lastgoodPosR) THEN 
                    jointpos1R := CalcJointT(p30R, tool0); !see if we can reach the new point;
                    moveCMPTR := 1; !Set the move complete bit to 1 this will block the loop in the application until the move is complete;
                    MoveL p30R, v5000, z50, tool0; !Move to the new point;   
                    currposR := CRobT(\Tool:=tool0 \WObj:=wobj0); !Update the robots new postion
                    lastgoodPosR := currposR; !Update the error return target to the last completed move
                    moveCMPTR :=0; !Clear the moveCMPT bit to allow application to continue
                ENDIF
                
        ENDWHILE
        
        !Begin Error Handler
        ERROR
         moveCMPTR := 1;
            TEST ERRNO
                CASE ERR_COLL_STOP:
                   p30R := clearposR;
                    
                CASE ERR_OUTSIDE_REACH:
                    p30R := lastgoodPosR;
                    
                    
            ENDTEST
            StartMove;
            RETRY;
        !End Error Handler
            
    ENDPROC
ENDMODULE