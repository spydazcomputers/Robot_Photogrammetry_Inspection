MODULE MainModule
	PERS robtarget p20L:=[[-78.24,-131.53,250.37],[0.43653,0.38902,-0.793745,-0.167552],[-1,3,0,11],[152.063,9E+09,9E+09,9E+09,9E+09,9E+09]];
	VAR robtarget p30L;
	VAR robtarget lastgoodPosL;
    VAR robtarget currposL;
    PERS robtarget clearposL:=[[-78.24,-131.53,250.37],[0.43653,0.38902,-0.793745,-0.167552],[-1,3,0,11],[152.063,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR jointtarget jointpos1L;
    VAR errnum myerrnumL;
    VAR num moveCMPTL := 1;
	TASK PERS wobjdata Workobject_1:=[FALSE,TRUE,"",[[0,0,0],[0,0,0,1]],[[0,0,0],[1,0,0,0]]];
    PROC main()
         
	ConfL \Off;
	p30L := p20L;
    MoveL p20L,v5000,z50,tool0\WObj:=Workobject_1;
    lastgoodPosL := p20L;
    lastgoodPosL := p20L;
    moveCMPTL := 0;
		WHILE TRUE DO
            restart:
            jointpos1L := CalcJointT(p30L, tool0 ); !see if we can reach the new point;
              
                IF NOT (p30L = lastgoodPosL) THEN 
                    moveCMPTL := 1; !Set the move complete bit to 1 this will block the loop in the application until the move is complete;
                    MoveL p30L,v5000,z50,tool0\WObj:=Workobject_1; !Move to the new point;   
                    currposL := CRobT(\Tool:=tool0 \WObj:=wobj0); !Update the robots new postion
                    lastgoodPosL := currposL; !Update the error return target to the last completed move
                    moveCMPTL :=0; !Clear the moveCMPT bit to allow application to continue
                ENDIF
                
        ENDWHILE
        
        !Begin Error Handler
        ERROR
              moveCMPTL := 1;      
            TEST ERRNO
                CASE ERR_COLL_STOP:
                    p30L := clearposL;
                    
                CASE ERR_OUTSIDE_REACH:
                    p30L := lastgoodPosL;
                    
                    
            ENDTEST
            StartMove;
            RETRY;
        !End Error Handler
            
    ENDPROC
ENDMODULE